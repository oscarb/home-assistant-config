blueprint:
  name: Philips Tap Dial Switch Volume and action control
  description: Control actions with the dial on a Philips Hue Tap Switch. Use the
    four buttons to assign your own actions. Based on @apollo1220.
  source_url: https://github.com/Ddemooij1984/Home-assistent/blob/main/philips_tap_dial_switch%20volume-and-actions.yaml
  domain: automation
  input:
    remote:
      name: Philips Hue Tap Switch
      selector:
        device:
          integration: zha
          manufacturer: Signify Netherlands B.V.
          model: RDM002
          multiple: false
    turnwheel_left:
      name: turnwheel left
      description: To be controlled with the dial
      selector:
        action: {}
    turnwheel_right:
      name: turnwheel right
      description: To be controlled with the dial
      selector:
        action: {}
    button_1_press:
      name: Button 1 Press
      description: Action to run in a single press of button 1
      default: []
      selector:
        action: {}
    button_2_press:
      name: Button 2 Press
      description: Action to run in a single press of button 2
      default: []
      selector:
        action: {}
    button_3_press:
      name: Button 3 Press
      description: Action to run in a single press of button 3
      default: []
      selector:
        action: {}
    button_4_press:
      name: Button 4 Press
      description: Action to run in a single press of button 4
      default: []
      selector:
        action: {}
mode: restart
max_exceeded: silent
variables:
  event: '{{ trigger.event.data.command }}'
  scene: '{{ trigger.event.data.args[1] }}'
  step_mode: '{{ trigger.event.data.params.step_mode }}'
  step_size: '{{ trigger.event.data.params.step_size }}'
trigger:
- platform: event
  event_type: zha_event
  event_data:
    device_id: !input remote
action:
- choose:
  - conditions:
    - '{{ event == "step_with_on_off" }}'
    - '{{ step_mode == "StepMode.Up" }}'
    sequence: !input turnwheel_right
  - conditions:
    - '{{ event == "step_with_on_off" }}'
    - '{{ step_mode == "StepMode.Down" }}'
    sequence: !input turnwheel_left
  - conditions:
    - '{{ event == "recall" }}'
    - '{{ scene == 1 }}'
    sequence: !input button_1_press
  - conditions:
    - '{{ event == "recall" }}'
    - '{{ scene == 0 }}'
    sequence: !input button_2_press
  - conditions:
    - '{{ event == "recall" }}'
    - '{{ scene == 5 }}'
    sequence: !input button_3_press
  - conditions:
    - '{{ event == "recall" }}'
    - '{{ scene == 4 }}'
    sequence: !input button_4_press

- id: 'isRB46wN'
  alias: Turn christmas lights on when dark outside
  trigger:
    entity_id: sun.sun
    attribute: elevation
    platform: numeric_state
    below: -3.0
  condition: 
    - condition: state
      entity_id: input_boolean.is_christmas_time
      state: "on"
  action:
  - service: homeassistant.turn_on
    data:
      entity_id: group.christmas_lights

- id: 'zQqB7S81'
  alias: Turn christmas lights off when bright outside
  trigger:
    platform: sun
    event: sunrise
  condition:
    - condition: state
      entity_id: input_boolean.is_christmas_time
      state: "on"
  action:
  - service: homeassistant.turn_off
    data:
      entity_id: group.christmas_lights

- id: 'V14JZxnL'
  alias: Turn off Christmas lights at night
  trigger:
    platform: time
    at: 00:30
  condition: 
    - condition: state
      entity_id: input_boolean.is_christmas_time
      state: "on"
  action:
  - service: homeassistant.turn_off
    data:
      entity_id: group.christmas_lights

- id: 'ktgrzl14'
  alias: Turn office lights on when computer is active
  trigger:
    platform: state
    entity_id: binary_sensor.macbook_pro
    to: 'on'
  condition: 
    condition: state
    entity_id: binary_sensor.macbook_pro_at_desk
    state: 'on'
  action:
  - service: light.turn_on
    data:
      entity_id: group.office

- id: 'zcbujwFc'
  alias: Turn office lights off when computer is inactive
  trigger:
    platform: state
    entity_id: binary_sensor.macbook_pro
    to: 'off'
  condition: 
    condition: and
    conditions:
      - condition: state
        entity_id: binary_sensor.macbook_pro_at_desk
        state: 'on'
      - condition: time
        after: '15:30:00'
  action:
  - service: light.turn_off
    data:
      entity_id: 
       - office.office_spotlights
       - office.office_desk_lamp

- id: '5kRhfCr6'
  alias: Hallway motion turns on tablet
  trigger:
    entity_id: binary_sensor.hallway_motion_sensor
    from: 'off'
    platform: state
    to: 'on'
  condition: []
  action:
  - service: homeassistant.turn_on
    target:
      entity_id: 
        - switch.magic_mirror
        - switch.hallway_christmas_tree_mini

- id: '100JZqsD'
  alias: Hallway motion absence turns off tablet
  trigger:
    entity_id: binary_sensor.hallway_motion_sensor
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - delay: 00:00:05
  - service: homeassistant.turn_off
    entity_id: switch.magic_mirror

- id: 'qPY0qTsQ'
  alias: Bathroom motion turns on bathroom ceiling lamp dimmed
  trigger:
    entity_id: binary_sensor.mqtt_bathroom_motion
    from: 'off'
    platform: state
    to: 'on'
  condition:
  - after: '22:00'
    before: 08:00
    condition: time
  action:
  - data:
      brightness: 1
      entity_id: light.bathroom_ceiling
    service: light.turn_on

- id: 'Etd7vGR0'
  alias: Bathroom motion turns on bathroom ceiling lamp strong
  trigger:
    entity_id: binary_sensor.mqtt_bathroom_motion
    from: 'off'
    platform: state
    to: 'on'
  condition:
  - after: 08:00
    before: '22:00'
    condition: time
  action:
  - data:
      brightness: 255
      entity_id: light.bathroom_ceiling
    service: light.turn_on

- id: 'WRU2Iewy'
  alias: Bathroom motion sensor disabled turns off light
  trigger:
    entity_id: binary_sensor.mqtt_bathroom_motion
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - data:
      entity_id: light.bathroom_ceiling
    service: light.turn_off

- id: 'w5g7FTpO'
  alias: Turn on office lights when PC turns on
  description: ''
  trigger:
    entity_id: switch.computer_power
    from: 'off'
    platform: state
    to: 'on'
  condition: []
  action:
  - data: {}
    entity_id: group.office
    service: light.turn_on

- id: 'nzf1opOZ'
  alias: Turn off office lights when PC turns off
  description: ''
  trigger:
    entity_id: switch.computer_power
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - data: {}
    entity_id: group.office
    service: light.turn_off

- id: 'fRLa11Es'
  alias: "TV volume control"
  trigger:
    platform: state
    entity_id: input_number.tv_volume
  action:
    - service: media_player.volume_set
      target:
        entity_id: media_player.tv
      data:
        volume_level: '{{ trigger.to_state.state | float / 60  }}'

- id: 'eFPBd9m3'
  alias: "TV device trigger (turn on)"
  trigger:
    platform: device
    device_id: 3db85e45506d5575e3ab481d650bf776
    domain: philips_js
    type: turn_on
  action:
    - service: script.turn_tv_on

- id: 'MMpEZi5k'
  alias: "Kids room button clicked"
  trigger:
    platform: event
    event_type: flic
    event_data:
      name: "kids room"
      action: PUSH 
  action:
      # Turn off lights
    - service: light.turn_off
      entity_id: light.kids_room_ceiling
    - service: switch.turn_off
      entity_id: switch.kids_room_star
    - service: switch.turn_off
      entity_id: switch.kids_room_reading_lamp
    - delay: 2
    - service: switch.turn_off
      entity_id: switch.kids_room_butterfly
    # Play Spotify goodnight playlist
    - service: script.cast_goodnight_playlist
    - service: timer.start
      entity_id: timer.kids_room_sleep_timer
    # Sing happy birthday? 
    # Send notification if daytime? 
    # Count button presses

- id: '3xnyaeC7'
  alias: "Flic Twist ⚫️"
  trigger:
    platform: event
    event_type: flic
    event_data:
      name: "office"
  action:
    - choose:
      - conditions: "{{ trigger.event.data.action == 'PUSH'}}"
        sequence:
        - service: switch.toggle
          entity_id: switch.speakers
      - conditions: "{{ trigger.event.data.action == 'DOUBLE_PUSH'}}"
        sequence:
          - service: persistent_notification.create
            data: 
              title: "DOUBLE PUSH"
              message: "TEST"

- id: 'KhwCeo0X'
  alias: Stop kids room playback when sleep timer finishes
  trigger:
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.kids_room_sleep_timer
  action:
    - service: media_player.media_stop
      entity_id: media_player.kids_room_speaker

- id: 'eJqn2aZN'
  alias: Turn light on/off when pressing remote
  mode: parallel
  trigger:
    - platform: state
      entity_id: event.kids_room_remote
      variables:
        button1: switch.kids_room_butterfly
        button2: switch.kids_room_star
        button3: switch.kids_room_reading_lamp
    - platform: state
      entity_id: 
        - event.bedroom_remote_1
        - event.bedroom_remote_2
      variables:
        button1: light.bedroom_bedside_table_1
        button2: light.bedroom_bedside_table_2
        button3: light.bedroom_sideboard
    - platform: state
      entity_id: event.christmas_remote
      variables:
        button1: 
          - switch.living_room_christmas_tree
          - switch.hallway_christmas_tree_mini
        button2: switch.balcony_lights
        button3:
          - switch.kitchen_advent_candlestick
          - switch.bedroom_advent_candlestick
  condition:
    alias: Ensure LilyGO was not recently restarted
    condition: state
    entity_id: binary_sensor.omg_lilygo_rtl_433_esp_sys_connectivity
    state: 'on'
    for: 
      minutes: 1 
  action:
    - service: >
        {% if trigger.to_state.attributes.event_type == 'on' %}
          homeassistant.turn_on
        {% else %}
          homeassistant.turn_off
        {% endif %}
      target: 
        entity_id: >
          {% from 'utilities.jinja' import flatten %}
          {% if trigger.to_state.attributes.group %}
            {{ flatten(button1, button2, button3)  }}
          {% else %}
            {% set i = trigger.to_state.attributes.unit % 3 %}
            {{ [button1, button2, button3][i] }}
          {% endif %}

- id: 'z3gStMbe'
  alias: Initiate Christmas feelings on Christmas Eve morning
  trigger:
    - platform: sun
      event: sunrise
  condition:
    alias: Christmas
    condition: template
    value_template: '{{ now().month == 12 and now().day == 24 }}'
  action:
    - service: script.initiate_christmas_feeling

- id: 'Gh8A5yyM'
  alias: Turn on/off speakers when audio available
  trigger:
    - platform: state
      entity_id: binary_sensor.speakers_audio_available
      to: 'on'
      for: '00:00:02'
    - platform: state
      entity_id: binary_sensor.speakers_audio_available
      to: 'off'
      for: '00:05:00'
  action:
    - service: > 
        {% if trigger.to_state.state == 'on' %}
          homeassistant.turn_on
        {% else %}
          homeassistant.turn_off
        {% endif %}
      entity_id: switch.speakers

- id: 'BZqOlbuJ'
  alias: "Music button clicked"
  trigger:
    platform: event
    event_type: flic
    event_data:
      name: "Music"
  action:
    - service: >
        {% if trigger.event.data.action == 'PUSH' %}
          media_player.media_next_track
        {% elif trigger.event.data.action == 'DOUBLE_PUSH' %}
          media_player.media_play_pause
        {% endif %}
      entity_id: media_player.spotify_paq

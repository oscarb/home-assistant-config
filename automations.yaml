- id: '1564525145700'
  alias: Turn christmas lights on when dark outside
  trigger:
    entity_id: sun.sun
    attribute: elevation
    platform: numeric_state
    below: -3.0
  condition: []
  action:
  - service: homeassistant.turn_on
    data:
      entity_id: group.christmas_lights
- id: '1564525145711'
  alias: Turn christmas lights off when bright outside
  trigger:
    platform: sun
    event: sunrise
  condition: []
  action:
  - service: homeassistant.turn_off
    data:
      entity_id: group.christmas_lights
- id: '1608504370538'
  alias: Turn off Christmas lights at night
  trigger:
    platform: time
    at: 00:30
  condition: []
  action:
  - service: homeassistant.turn_off
    data:
      entity_id: group.christmas_lights
- id: '1564525145701'
  alias: Turn office lights on when computer is active
  trigger:
    platform: state
    entity_id: binary_sensor.macbook_pro
    to: 'on'
  condition: 
    condition: state
    entity_id: binary_sensor.macbook_pro_at_desk
    state: 'on'
  action:
  - service: light.turn_on
    data:
      entity_id: group.office
- id: '1564525145702'
  alias: Turn office lights off when computer is inactive
  trigger:
    platform: state
    entity_id: binary_sensor.macbook_pro
    to: 'off'
  condition: 
    condition: and
    conditions:
      - condition: state
        entity_id: binary_sensor.macbook_pro_at_desk
        state: 'on'
      - condition: time
        after: '15:30:00'
  action:
  - service: light.turn_off
    data:
      entity_id: 
       - office.office_spotlights
       - office.office_desk_lamp
- id: '1564525145782'
  alias: Hallway motion turns on tablet
  trigger:
    entity_id: binary_sensor.mqtt_hallway_motion
    from: 'off'
    platform: state
    to: 'on'
  condition: []
  action:
  - service: script.turn_magic_mirror_screen_on
- id: '1564525145783'
  alias: Hallway motion absence turns off tablet
  trigger:
    entity_id: binary_sensor.mqtt_hallway_motion
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - delay: 00:00:05
  - service: script.turn_magic_mirror_screen_off
- id: '1569245264705'
  alias: Bathroom motion turns on bathroom ceiling lamp dimmed
  trigger:
    entity_id: binary_sensor.mqtt_bathroom_motion
    from: 'off'
    platform: state
    to: 'on'
  condition:
  - after: '22:00'
    before: 08:00
    condition: time
  action:
  - data:
      brightness: 1
      entity_id: light.bathroom_ceiling
    service: light.turn_on
- id: '1569245264706'
  alias: Bathroom motion turns on bathroom ceiling lamp strong
  trigger:
    entity_id: binary_sensor.mqtt_bathroom_motion
    from: 'off'
    platform: state
    to: 'on'
  condition:
  - after: 08:00
    before: '22:00'
    condition: time
  action:
  - data:
      brightness: 255
      entity_id: light.bathroom_ceiling
    service: light.turn_on
- id: '1569245490089'
  alias: Bathroom motion sensor disabled turns off light
  trigger:
    entity_id: binary_sensor.mqtt_bathroom_motion
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - data:
      entity_id: light.bathroom_ceiling
    service: light.turn_off
- id: '1577999538328'
  alias: Clean room
  description: Start Roborock room cleaning triggered from Google Assistant (IFTTT)
  trigger:
    event_data:
      action: vacuum
    event_type: ifttt_webhook_received
    platform: event
  condition: []
  action:
  - alias: ''
    entity_id: vacuum.robocop
    data_template:
      area: '{{ trigger.event.data.room }}'
    service: python_script.vacuum_room
- id: '1577999538329'
  alias: Send notification when Spotify playlist is updated
  description: Sends a rich notification when a track has been added to a Spotify playlist, as detected by IFTTT
  trigger:
    event_data:
      action: sharing
    event_type: ifttt_webhook_received
    platform: event
  condition:
    condition: template
    value_template: >
      {{ trigger.event.data["addedBy"] != states('variable.spotify_user_name') }}
  action:
  - service: notify.mobile_app_oneplus_6t
    data_template:
      title: "{{ trigger.event.data['playlistName'] }}"
      message: >
        🎵 {{ trigger.event.data['artistName'] ~ " - " ~ trigger.event.data['trackName'] }}    
      data:
        group: "{{ trigger.event.data['addedBy'] }}"
        color: '#1DB954'
        sticky: 'false'
        clickAction: !secret spotify_shared_playlist
        channel: Playlist updates
        icon_url: !secret spotify_icon
        image: "{{ trigger.event.data['albumCoverUrl'] }}"
        actions:
        - action: "URI" 
          title: "Play"
          uri: "{{ trigger.event.data['trackUrl'] }}"
- id: '1585509334461'
  alias: Turn on office lights when PC turns on
  description: ''
  trigger:
    entity_id: switch.computer_power
    from: 'off'
    platform: state
    to: 'on'
  condition: []
  action:
  - data: {}
    entity_id: group.office
    service: light.turn_on
- id: '1585509334462'
  alias: Turn off office lights when PC turns off
  description: ''
  trigger:
    entity_id: switch.computer_power
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - data: {}
    entity_id: group.office
    service: light.turn_off
- id: '1587292652712'
  alias: Send notification when vacuum returns to base with empty dustbin action
  trigger:
    entity_id: vacuum.robocop
    platform: state
    from: cleaning
    to: returning
  action:
  - service: notify.mobile_app_oneplus_6t
    data_template:
      title: "Robocop - Clean-up complete: {{ trigger.to_state.attributes.cleaned_area }} m², {{ trigger.to_state.attributes.cleaning_time }} min"
      message: >
        {{ '⚠️ Check dustbin and filter.' if (trigger.to_state.attributes.total_cleaned_area / states('variable.apartment_size')|int * 2)|int > (trigger.from_state.attributes.total_cleaned_area / states('variable.apartment_size')|int * 2)|int else
            '⚠️ Check dustbin.' if  (trigger.to_state.attributes.total_cleaned_area / states('variable.apartment_size')|int)|int > (trigger.from_state.attributes.total_cleaned_area / states('variable.apartment_size')|int)|int }} Finished cleaning, returning to base.       
      data:
        channel: Vacuum
        actions:
        - action: send_robocop_to_waste_bin
          title: Go to waste bin
        - action: URI
          title: Manual
          uri: !secret roborock_manual
- id: '1587296067183'
  alias: Send Robocop to waste bin on notification action
  description: ''
  trigger:
    event_data:
      action: send_robocop_to_waste_bin
    event_type: mobile_app_notification_action
    platform: event
  condition: []
  action:
  - data: {}
    service: script.send_robocop_to_waste_bin

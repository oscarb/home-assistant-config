homeassistant:
  # Name of the location where Home Assistant is running
  name: !secret home_name
  # Location required to calculate the time the sun rises and sets
  latitude: !secret home_latitude 
  longitude: !secret home_longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: !secret home_elevation
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Localization
  currency: !secret home_currency
  country: !secret home_country 
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: !secret home_timezone
  # Customization file
  customize: !include customize.yaml
  # URLs
  external_url: !secret external_url
  internal_url: !secret internal_url

# Show links to resources in log and frontend
# introduction: false
  
# Enables the frontend
frontend:
  extra_module_url:
    - /local/plugins/card-mod.js?v=3.1.1

# Handles redirects from the My Home Assistant service.
my:

# Enables configuration UI
config:

# Enables the mobile companion app
mobile_app:

# Enable python scripts
python_script:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
http:
  use_x_forwarded_for: true
  trusted_proxies: 
    - !secret reverse_proxy_server

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Voice assistant
assist_pipeline:

# Required for text-to-speech
media_source:

# Enables support for tracking state changes over time
history:
  exclude:
    domains:
      - automation
      - updater
      - camera
      - device_tracker
      - group
      - input_text
      - persistent_notification
      - script
      - sensor
      - variable
    entities:
      - binary_sensor.updater
    entity_globs:
      - binary_sensor.macbook_pro_*
      - binary_sensor.mqtt_*
      - switch.*_sensor
      - switch.ip_webcam
      - sensor.mqtt_*
      - sensor.*dimmer*

  include:
    domains:
      - light
      - binary_sensor
      - switch
      - sensor
      - sun
      - switch
      - vacuum
    entities:
      - sensor.ip_webcam_motion
      - sensor.oneplus_6t_geocoded_location
      - media_player.tv
      - device_tracker.oneplus_a6013
      - binary_sensor.macbook_pro 
      - binary_sensor.macbook_pro_at_desk

# View all events in a logbook
logbook:
  exclude:
    domains:
      - updater
      - media_player

# Purge database regularly
recorder:
  purge_keep_days: 7
  exclude:
    domains:
      - automation
      - updater
      - camera
      - group
      - persistent_notification
      - script

# Enables a map showing the location of tracked devices
map:

# Track the sun
sun:

# Global variables for templates
input_text:
  video_url:
    name: Video URL
    initial: !secret magic_mirror_video

# MQTT Binary sensors
mqtt:
  binary_sensor:
   - name: Hallway motion sensor 
     state_topic: "home/OMG_lilygo_rtl_433_ESP/RTL_433toMQTT/Nexa-Security/1/25412630"
     value_template: "{{ value_json.state }}"
     payload_on: "ON"
     payload_off: "OFF"
     device_class: motion
   - name: Bathroom motion sensor 
     state_topic: "home/OMG_lilygo_rtl_433_ESP/RTL_433toMQTT/Nexa-Security/1/29404962"
     value_template: "{{ value_json.state }}"
     payload_on: "ON"
     payload_off: "OFF"
     device_class: motion     
  event:
    - name: Kids Room Remote
      state_topic: "home/OMG_lilygo_rtl_433_ESP/RTL_433toMQTT/Nexa-Security/3/32595538"
      <<: &nexa_remote_defaults
        event_types: 
          - 'on' 
          - 'off'
        device_class: "button"
        value_template: |
          { 
            "button": "{{ value_json['id'] }}",
            "unit": "{{ value_json['unit']}}",
            "event_type": "{{ value_json['state'] | lower }}",
            "group": {{ iif(value_json['group']) | to_json }}
          }
    - name: Christmas remote
      state_topic: "home/OMG_lilygo_rtl_433_ESP/RTL_433toMQTT/Nexa-Security/3/27478810"
      <<: *nexa_remote_defaults



# Template
template:
  - binary_sensor: 
    - name: Bill Device On  
      state: >
        {{ states("sensor.tasmota_bill_energy_power") | float(0) > 1 | float(0) }}

    - name: MacBook Pro
      state: >
          {{ is_state('binary_sensor.macbook_pro_active', 'on')
             or is_state('binary_sensor.macbook_pro_active_work', 'on') 
          }}

    - name: MacBook Pro at desk
      state: >
          {{ not is_state('sensor.macbook_pro_internal_battery_state', 'Not Charging') }}
 

# Switches
switch:
  - platform: wake_on_lan
    name: Computer Power
    mac: !secret computer_mac
    host: !secret computer_ip
    turn_off: 
      service: script.turn_computer_off

  - platform: group
    name: Speakers
    entities:
      - switch.speaker_left
      - switch.speaker_right

  - platform: group
    name: Kitchen advent candlestick
    entities:
      - switch.tasmota_bub

  - platform: group
    name: Living room christmas tree
    entities:
      - switch.tasmota_bob

  - platform: group
    name: Bedroom advent candlestick
    entities:
      - switch.tasmota_bill

  - platform: group
    name: Magic mirror
    entities:
      - switch.galaxy_tab_s2_screen

  - platform: template
    switches:

      tv_sound:
        friendly_name: TV sound
        value_template: "{{ is_state_attr('media_player.tv', 'is_volume_muted', 'true') }}"
        turn_on:
          service: script.toggle_tv_mute
        turn_off:
          service: script.toggle_tv_mute

      hallway_camera: 
        friendly_name: Show hallway camera on TV
        value_template: "{{ is_state_attr('media_player.google_tv', 'media_content_id', states('input_text.video_url')) }}"
        turn_on:
          service: script.cast_magic_mirror_camera
          data:
            media_player: media_player.google_tv
        turn_off:
          service: media_player.turn_off
          data:
            entity_id: media_player.google_tv


# Google Assistant - https://www.home-assistant.io/components/google_assistant
google_assistant:
  project_id: !secret ga_project_id
  service_account:
    private_key: !secret ga_private_key
    client_email: !secret ga_client_email
  expose_by_default: false
  entity_config:
    # Bedroom
    switch.bedroom_bedside_table_1:
      name: Crib side light
      room: Bedroom / Sovrum 
      expose: true
    switch.bedroom_bedside_table_2:
      name: Window side light
      room: Bedroom / Sovrum 
      expose: true
    switch.bedroom_sideboard_light:
      name: Sideboard light
      room: Bedroom / Sovrum 
      expose: true

    # Hallway
    switch.magic_mirror:
      name: Magic Mirror
      room: Hallway / Hallen
      aliases:
        - Mirror
      expose: true

    switch.hallway_sideboard_light:
      name: Sideobard light
      room: Hallway / Hallen
      expose: true
      
    switch.hallway_camera:
      name: Hallway camera
      room: Hallway / Hallen
      aliases:
        - Kameran i hallen
        - Security camera
      expose: true

    # Kitchen 
    sensor.mqtt_kitchen_temperature:
      name: Indoors temperature
      room: Kitchen / KÃ¶k
      aliases:
        - Kitchen temperature
        - Temperature
      expose: true

    # Balcony
    sensor.balcony_climate_temperature:
      name: Outdoors temperature
      room: Balcony
      aliases:
        - Balcony temperature
        - Outside temperature
        - Temperature outdoors
        - Temperature
      expose: true

    # Living room
    media_player.tv:
      name: Philips TV
      room: LivingroomVardagsrum
      aliases: 
        - TV Screen
      expose: false

    # Office
    switch.computer_power:
      name: Computer
      room: Office
      aliases:
        - PC
      expose: true

# Proxy stream
stream: 

# Channge UI config mode
lovelace:
  mode: yaml
  resources:
    - url: /local/plugins/slider-entity-row.js?v=17.2.1
      type: module
    - url: /local/plugins/fold-entity-row.js?v=2.0.14
      type: module
    - url: /local/plugins/button-card.js?v=3.4.2
      type: module
    - url: /local/plugins/homekit-panel-card.js?v=0.6.2
      type: module
    - url: /local/plugins/slider-button-card.js?v=1.10.3
      type: module
    - url: /local/plugins/vacuum-card.js?v=2.2.5
      type: module
    - url: /local/plugins/mini-media-player-bundle.js?v1.15.0
      type: module
    - url: /local/plugins/auto-entities.js?v1.9.1
      type: module


# Text to speech
tts:
  - platform: google_translate
    service_name: google_say

# History stats
sensor:
  - platform: history_stats
    name: TV on time
    entity_id: media_player.tv
    state: "on"
    type: time
    start: "{{ 0 }}"
    end: "{{ now() }}"

  - platform: rest
    name: Goodnight playlist story indexes
    resource: !secret spotify_sectionize_url
    verify_ssl: false
    scan_interval: 14400


# Cloud
cloud:

# Wake on LAN
wake_on_lan:

# System health
system_health:

# For casting YouTube videos
media_extractor:

# Notify Group
notify: 
  - name: mobile_app
    platform: group
    services: 
      - service: !secret mobile_device_name

# Light groups 
light:
  - platform: group
    name: Living Room Ceiling
    entities:
      - light.living_room_ceiling_1
      - light.living_room_ceiling_2
      - light.living_room_ceiling_3
  - platform: group
    name: Office lights
    entities:
      - light.office_top_corner
      - light.office_spotlights
      - light.office_desk_lamp
  - platform: template
    lights:
      flic_twist:
        friendly_name: Flic Twist
        turn_on:

        turn_off:

        set_level:
          service: media_player.volume_set
          target:
            entity_id: media_player.spotify_paq
          data:
            volume_level: "{{ (brightness / 255 * 100)|int / 100 }}"        

      office_lights_smart: &smart_light
        friendly_name: "Office lights smart"
        unique_id: office_lights_dimming
        level_template: >
          {{ (expand('group.office') 
            | map(attribute='attributes.brightness', default=0) 
            | select("greaterthan", 0)
            | list or [0])
            | average 
            | round }}
        value_template: >
          {{ expand('group.office') 
            | map(attribute='attributes.brightness', default=0) 
            | sum > 0  }}
        temperature_template: >
          {{ ((expand('group.office') 
          | map(attribute='attributes.color_temp', default=-1)
          | select("greaterthan", 0)
          | list or [0])| average | round) or Undefined }}
        min_mireds_template: >
          {{ expand('group.office') 
          | selectattr('domain', '==', 'light')
          | selectattr('attributes.min_mireds')
          | map(attribute='attributes.min_mireds')
          | list | min | int }}
        max_mireds_template: >
          {{ expand('group.office') 
          | selectattr('domain', '==', 'light')
          | selectattr('attributes.max_mireds')
          | map(attribute='attributes.max_mireds')
          | list | max | int }}
        turn_on:
          service: light.turn_on
          target:
            entity_id: group.office
        turn_off:
          service: light.turn_off
          target:
            entity_id: group.office
        set_temperature: 
          - service: light.turn_on
            data:
              color_temp: "{{ color_temp }}"
            target:
              entity_id: >
                {{ expand('group.office') 
                  | selectattr('attributes.brightness')
                  | map(attribute='entity_id') 
                  | list }}
        set_level:
          # Set brightness by amount to all lights (when all are off), OR only the lights that would remain on by the brightness change
          - service: light.turn_on
            data:
              brightness_step: "{{ brightness - state_attr('light.office_lights_smart', 'brightness')|int }}"
            target:
              entity_id: >
                {% set brightness_from = state_attr('light.office_lights_smart', 'brightness')|int %}
                {% set brightness_change = brightness - brightness_from %}
                {{ expand("group.office") 
                  | selectattr('attributes.brightness')
                  | selectattr('attributes.brightness', '>', -brightness_change)
                  | map(attribute='entity_id') 
                  | list or 
                  expand('group.office') 
                  | selectattr('domain', '==', 'light')
                  | map(attribute='entity_id') 
                  | list if brightness != 255 else [] }}
          # Set brightness to 1 for all lights that would turn off, keeping them on
          - service: light.turn_on
            data:
              brightness_pct: 1
            target:
              entity_id: >
                {% set brightness_from = state_attr('light.office_lights_smart', 'brightness')|int %}
                {% set brightness_change = brightness - brightness_from %}
                {{ expand('group.office') 
                | selectattr('attributes.brightness')
                | selectattr('attributes.brightness', '<=', -brightness_change)
                | map(attribute='entity_id') 
                | list 
                }}
          # Set brightness to 100 for all lights currently on when slider moves to 100%, or all the lights if all are currently off
          - service: light.turn_on
            data:
              brightness_pct: 100
            target:
              entity_id: >
                {{ expand("group.office") 
                  | selectattr('attributes.brightness')
                  | map(attribute='entity_id') 
                  | list or 
                    expand('group.office') 
                  | selectattr('domain', '==', 'light')
                  | map(attribute='entity_id') 
                  | list if brightness == 255 else [] }}

      office_smart_lights_v: 
        <<: *smart_light
        friendly_name: "Office lights smart V2"
        unique_id: office_lights_dimming_v2

shell_command: 
  turn_off_computer: ssh {{ ssh_user }} net rpc shutdown -I {{ ip }} -U {{ user }} -t {{ timeout }}

# Variables
variable:
  apartment_size:
    value: !secret apartment_size
    restore: true
  spotify_user_name: 
    value: !secret spotify_user_name
    restore: true

# Spotcast 
spotcast: 
  sp_dc: !secret spotify_sp_dc
  sp_key: !secret spotify_sp_key

## HELPERS

# Button
input_button:

# Counter
counter: 

# Date/time 
input_datetime:

# Select
input_select:

# Schedule
schedule: 

# Timer
timer:

# Input numbers
input_number:
  tv_volume:
    name: TV Volume
    initial: 8
    min: 0
    max: 16
    step: 1

# Input booleans
input_boolean:
  is_christmas_time:
    name: Is Christmas time
    icon: mdi:string-lights

# Includes 
group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
intent_script: !include intent_scripts.yaml


# TODO 
# Add more security:
# Abort shutdown